1. 컴퓨터의 구조 꼭 알아야할까?

개발자는 애플리케이션 개발자와 시스템 개발자로 나뉜다 -> 소프트웨어가 애플리케이션 소프트웨어와 시스템 소프트웨어로 나뉜다

애플리케이션 소프트웨어 : 우리가 아는 많은 프로그램들 ex) 스카이프, 카카오톡, 워드, 포트나이트~~
시스템 소프트웨어 : 눈애 잘 보이지 않지만 애플리케이션의 실행 환경을 제공해주는 소프트웨어, 애플리케이션이 하드웨어를 사용할 수 있게 해준다 ex) 운영체제, 컴파일러 ~

애플리케이션 <-> 시스템 소프트웨어 <-> 하드웨어

시스템 소프트웨는 하드웨어와 직접적으로 맞다아 있기 때문에 시스템 개발자는 하드웨어(컴퓨터 구조)를 잘 알아야한다
애플리케이션의 실행 환경이 좋지 못하면 아무리 좋고 빠른 애플리케이션을 만들어도 느리게 동작하거나 갑자기 실행이 안될 수 있다 
애플리케이션 개발자가 하드웨어를 몰라도 된다는 말은 아니다
애플리케이션 개발자는 자신이 개발하는 애플리케이션이 어떤 환경해서 실행되는지 이해해야한다
컴퓨터에 대한 이해가 없는 애플리케이션 개발자는 애플리케이션 개발 도중 에러가 나거나 만든 프로그램이 느린 경우 자신의 코드의 문제인지 시스템이 느린건지 하드웨어 성능이 부족한건지 판단할 수 없다

-----------------------------------------------------------------------------------------------------------------------------------------------------

컴퓨터의 구조를 본격적으로 살펴보기 전에, 컴퓨터의 부품을 먼저 살펴봅시다. 앞으로 종종 등장하는 단어들이기 때문에, 한 번 짚고 넘어가면 좋습니다.

컴퓨터를 살 때 보면, 이런 것들이 막 써 있습니다.

CPU, 램, 하드 디스크, SSD … 이런 것들 많이 들어보셨죠?

이게 다 컴퓨터 내부에 들어 있는 부품들인데요.

컴퓨터의 원리에 대해 알아보기 전에, 그냥 어떤 부품들이 있는지 겉모습만 한 번 훑어 봅시다.
메인보드

메인보드는 컴퓨터에 들어가는 부품들을 다 연결할 수 있게 해주는 판입니다. 마더보드라고도 하죠.

무언가를 꽂을 수 있는 슬롯이나, 선을 연결할 수 있는 곳들이 있습니다. 여기에 컴퓨터의 부품을 직접 꽂거나 선으로 연결하는거죠. 그리고 이어폰 단자라든가, USB 포트, HDMI 포트 같이, 사용자가 연결할 수 있도록 해주는 것들도 마더보드에 장착되어 있습니다.
CPU

그 다음은 CPU인데요. 마더보드에 부착해서 사용합니다.

CPU는 작은 칩이지만 가장 중요한 부품이고, 대체로 가장 비싸기도 합니다. 컴퓨터의 모든 생각이나 계산이 여기에서 이뤄지죠. 컴퓨터의 뇌라고 볼 수 있습니다.

CPU에 대한 내용은 뒤의 챕터에서 더 다룰게요.
하드 디스크

다음은 하드 디스크입니다. 데이터를 저장하는 공간인데요. Hdd라고도 부릅니다.

이렇게 생겼습니다.

내부는 이렇게 생겼구요.

여러분들이 게임을 다운로드 받거나, 영화를 다운로드 받거나, 문서를 편집하다가 저장하면 여기에 특정 방식으로 기록이 되는 겁니다. 기록한 후에 그걸 읽어올 수도 있고요. 신기하지 않나요? 영화 1000개도 이 안에 다 저장할 수 있습니다.

모든 컴퓨터에 hdd가 있는건 아닌데요. 요즘 컴퓨터에는 Hdd 대신 ssd가 있기도 합니다. Hdd는 용량이 큰 대신 속도가 느리고 ssd는 용량이 작은 대신 속도가 빠릅니다.
RAM

다음은 램인데요, 8기가 램, 16기가 램, 이런 얘기들을 많이 들어보셨죠?

이렇게 생겼고 마더 보드에 꽂아서 사용합니다.

램은 저장장치인데요.

램에는 컴퓨터가 켜진 동안에만 가지고 있을 데이터를 저장합니다. 반면에 컴퓨터를 꺼도 남기고 싶은 데이터는 하드 디스크에 저장하죠.

램에 저장한 데이터는 컴퓨터가 꺼지면 사라지는 대신, 데이터를 꺼내 오거나, 수정하는 데 시간이 좀 더 적게 걸립니다. 그래서 컴퓨터는 일부러 하드 디스크에 있는 데이터를 램에 복사해서 작업하기도 합니다.
정리

이 정도가 흔히 컴퓨터들이 가지고 있는 핵심 부품들입니다.

그 외에는 전원을 각 부품에 제공해주는 파워 서플라이, 요즘 잘 쓰지는 않지만 CD나 DVD 같은 걸 읽을 수 있는 것도 있고요.

컴퓨터에서 발생하는 열을 바람으로 열을 배출시켜주는 팬, 비디오나 사운드 관련된 처리를 전문적으로 하는 비디오 카드나 사운드 카드 같은 칩들도 있습니다.

----------------------------------------------------------------------------------------------------------------------------------------------------

2. 컴퓨터의 언어 2진법

* 컴퓨터의 언어는 0과 1로 이루어져있다 (이진법)
* 0과 1로만 이루어진 코드를 머신 코드라고 한다
* 컴퓨터는 어떻게 0과 1을 구분하지? 컴퓨터는 어떻게 사람의 명령을 0과 1로 바꾸나

---------------------------------------------------------------------------------------------------------------------------------------------------

얼마나 알아야 하나요?

컴퓨터의 원리를 배우면 항상 먼저 나오는 게 이진법입니다. 그럼 컴퓨터의 원리를 이해하기 위해, 이진법을 얼마나 알아야 하는 걸까요?

이진법의 깊은 연산까지는 필요하지 않고, 이 정도면 컴퓨터의 원리를 이해하는 데 무리가 없습니다.

    이진법과 십진법 이해하기
    이진법의 간단한 계산 (덧셈과 뺄셈 정도)
    16진법

이번 챕터에서 이 내용들을 하나씩 배워볼 텐데요.

이진법에 익숙해져야 이후에 나오는 논리 연산, 머신 코드 등을 이해할 수 있습니다.
하나씩 살펴봅시다!

----------------------------------------------------------------------------------------------------------------------------------------

* 16진법은 2진법과 함꼐 컴퓨터를 다룰 때 많이 사용된다
* 16진법은 2진법으로된 머신코드를 간단하게 줄일 수 있다
* 16진법은 0 ~ 9 와 A ~ F 총 16개의 기호를 사용한다 A(10) B(11) C(12) D(13) E(14) F(15)
* 16진법 계산  
ex) 4 + 8 = C
* 프로그래밍에서는 0x로 시작하면 16진법은 의미하기도 한다
ex) C = oxC
ex) 32D8 = ox32D8
* 왜 16진수를 쓸까?
